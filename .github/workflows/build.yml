name: winapi-history build
on: [push, pull_request, workflow_dispatch]
jobs:
  build:
    strategy:
      matrix:
        build_mode:
          - mode: debug
            arg: ""
          - mode: release
            arg: "--release"
        os:
          - name: archlinux
            host_os: ubuntu-latest
            container: archlinux:base-devel
            exe_suffix: ""
          - name: ubuntu
            host_os: ubuntu-latest
            container: ubuntu:latest
            exe_suffix: ""
          - name: windows
            host_os: windows-latest
            exe_suffix: ".exe"
          - name: macos
            host_os: macos-latest
            exe_suffix: ""
      fail-fast: false

    runs-on: ${{ matrix.os.host_os }}
    container: ${{ matrix.os.container }}
    env:
      LANG: C.UTF-8
      LC_ALL: C.UTF-8
      DEBIAN_FRONTEND: noninteractive
      TZ: Etc/UTC

    steps:
      # update Arch
      - if: ${{ matrix.os.name == 'archlinux' }}
        name: update Arch
        run: pacman -Syu --noconfirm
      - if: ${{ matrix.os.name == 'archlinux' }}
        name: install Arch packages
        run: pacman -S --needed --noconfirm git

      # update Ubuntu
      - if: ${{ matrix.os.name == 'ubuntu' }}
        name: update Ubuntu apt database
        run: apt-get -y update
      - if: ${{ matrix.os.name == 'ubuntu' }}
        name: update Ubuntu packages
        run: apt-get -y dist-upgrade
      - if: ${{ matrix.os.name == 'ubuntu' }}
        name: install Ubuntu packages
        run: apt-get -y install curl build-essential git

      # common steps
      - if: ${{ matrix.os.name != 'windows' }}
        name: install rustup
        run: "curl --proto '=https' -sSf https://sh.rustup.rs | sh -s -- -y"
      - if: ${{ matrix.os.name != 'windows' }}
        name: add cargo directory to PATH
        run: 'echo "$HOME/.cargo/bin" >> "$GITHUB_PATH"'
      - name: install correct Rust version
        run: rustup toolchain install stable
      - name: check out repository code
        uses: actions/checkout@v4
      - name: run build
        run: cargo build --all-targets ${{ matrix.build_mode.arg }}
      - name: run test
        run: cargo test ${{ matrix.build_mode.arg }}
      - name: upload result
        uses: actions/upload-artifact@v4
        with:
          name: winapi-history-${{ matrix.os.name }}-${{ matrix.build_mode.mode }}
          path: |
            target/${{ matrix.build_mode.mode }}/winapi-history-web${{ matrix.os.exe_suffix }}
            winapi-history-web/icons/*.png
